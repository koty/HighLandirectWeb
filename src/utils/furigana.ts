import * as wanakana from 'wanakana';

// 一般的な漢字→ひらがな対応表（人名・会社名に特化）
const kanjiToHiraganaMap = new Map<string, string>([
  // 人名（苗字）
  ['田中', 'たなか'], ['佐藤', 'さとう'], ['鈴木', 'すずき'], ['高橋', 'たかはし'],
  ['渡辺', 'わたなべ'], ['伊藤', 'いとう'], ['山田', 'やまだ'], ['中村', 'なかむら'],
  ['小林', 'こばやし'], ['加藤', 'かとう'], ['吉田', 'よしだ'], ['山本', 'やまもと'],
  ['斉藤', 'さいとう'], ['松本', 'まつもと'], ['井上', 'いのうえ'], ['木村', 'きむら'],
  ['林', 'はやし'], ['清水', 'しみず'], ['山崎', 'やまざき'], ['森', 'もり'],
  ['阿部', 'あべ'], ['池田', 'いけだ'], ['橋本', 'はしもと'], ['山口', 'やまぐち'],
  ['石川', 'いしかわ'], ['前田', 'まえだ'], ['藤田', 'ふじた'], ['後藤', 'ごとう'],
  
  // 人名（名前）
  ['太郎', 'たろう'], ['次郎', 'じろう'], ['三郎', 'さぶろう'], ['花子', 'はなこ'],
  ['美子', 'よしこ'], ['健太', 'けんた'], ['翔太', 'しょうた'], ['拓也', 'たくや'],
  ['大輔', 'だいすけ'], ['裕介', 'ゆうすけ'], ['雄一', 'ゆういち'], ['直樹', 'なおき'],
  ['智子', 'ともこ'], ['真由美', 'まゆみ'], ['恵子', 'けいこ'], ['由美子', 'ゆみこ'],
  
  // 一般的な漢字
  ['東京', 'とうきょう'], ['大阪', 'おおさか'], ['名古屋', 'なごや'], ['横浜', 'よこはま'],
  ['神戸', 'こうべ'], ['福岡', 'ふくおか'], ['仙台', 'せんだい'], ['広島', 'ひろしま'],
  ['札幌', 'さっぽろ'], ['京都', 'きょうと'], ['千葉', 'ちば'], ['埼玉', 'さいたま'],
  
  // 会社用語
  ['株式会社', 'かぶしきがいしゃ'], ['有限会社', 'ゆうげんがいしゃ'], ['合同会社', 'ごうどうがいしゃ'],
  ['商事', 'しょうじ'], ['商会', 'しょうかい'], ['工業', 'こうぎょう'], ['産業', 'さんぎょう'],
  ['製作所', 'せいさくしょ'], ['製造', 'せいぞう'], ['建設', 'けんせつ'], ['運輸', 'うんゆ'],
  ['物流', 'ぶつりゅう'], ['サービス', 'さーびす'], ['システム', 'しすてむ'], ['技術', 'ぎじゅつ'],
  ['開発', 'かいはつ'], ['企画', 'きかく'], ['設計', 'せっけい'], ['販売', 'はんばい'],
  ['営業', 'えいぎょう'], ['事務所', 'じむしょ'], ['支店', 'してん'], ['本店', 'ほんてん'],
  
  // 単文字漢字
  ['一', 'いち'], ['二', 'に'], ['三', 'さん'], ['四', 'よん'], ['五', 'ご'],
  ['六', 'ろく'], ['七', 'なな'], ['八', 'はち'], ['九', 'きゅう'], ['十', 'じゅう'],
  ['山', 'やま'], ['川', 'かわ'], ['田', 'た'], ['中', 'なか'], ['木', 'き'],
  ['本', 'もと'], ['村', 'むら'], ['島', 'しま'], ['橋', 'はし'], ['野', 'の'],
  ['原', 'はら'], ['井', 'い'], ['上', 'うえ'], ['下', 'した'], ['前', 'まえ'],
  ['後', 'うしろ'], ['左', 'ひだり'], ['右', 'みぎ'], ['北', 'きた'], ['南', 'みなみ'],
  ['東', 'ひがし'], ['西', 'にし'], ['大', 'だい'], ['小', 'しょう'], ['高', 'たか'],
  ['新', 'しん'], ['古', 'ふる'], ['長', 'なが'], ['短', 'たん'], ['広', 'ひろ'],
  ['安', 'やす'], ['松', 'まつ'], ['竹', 'たけ'], ['梅', 'うめ'], ['桜', 'さくら'],
  ['花', 'はな'], ['美', 'み'], ['和', 'わ'], ['平', 'へい'], ['成', 'せい']
]);

/**
 * 漢字を含むテキストをひらがなに変換する
 * 部分的な変換を行い、変換できない部分はそのまま残す
 * @param text 変換対象のテキスト
 * @returns ひらがな変換された文字列
 */
function convertKanjiToHiragana(text: string): string {
  let result = text;
  
  // 辞書による変換（長い文字列から優先的に変換）
  const sortedEntries = Array.from(kanjiToHiraganaMap.entries())
    .sort(([a], [b]) => b.length - a.length);
  
  for (const [kanji, hiragana] of sortedEntries) {
    result = result.replace(new RegExp(kanji, 'g'), hiragana);
  }
  
  return result;
}

/**
 * 日本語テキストをひらがなのふりがなに変換する
 * @param text 変換対象のテキスト
 * @returns ひらがなのふりがな文字列
 */
export async function generateFurigana(text: string): Promise<string> {
  if (!text || text.trim().length === 0) {
    return '';
  }

  try {
    // まずwanakanaでローマ字・カタカナをひらがなに変換
    let converted = wanakana.toHiragana(text);
    
    // 次に辞書を使って漢字をひらがなに変換
    converted = convertKanjiToHiragana(converted);
    
    return converted;
  } catch (error) {
    console.error('Furigana generation failed:', error);
    return text; // エラーの場合は元のテキストを返す
  }
}

/**
 * 人名・会社名用のふりがな生成
 * より適切な変換を行うためのヘルパー関数
 * @param name 人名または会社名
 * @returns ひらがなのふりがな
 */
export async function generateNameFurigana(name: string): Promise<string> {
  if (!name || name.trim().length === 0) {
    return '';
  }

  // 特殊文字や記号を除去してからふりがな生成
  const cleanName = name.replace(/[（）()「」\[\]【】・\s]/g, '');
  
  if (cleanName.length === 0) {
    return '';
  }

  return await generateFurigana(cleanName);
}

/**
 * ふりがな機能が利用可能かチェック
 * @returns 常にtrueを返す（wanakanaは常に利用可能）
 */
export function isFuriganaAvailable(): boolean {
  return true;
}